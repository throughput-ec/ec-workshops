{"data":{"allMarkdownRemark":{"edges":[{"node":{"rawMarkdownBody":"\n<div><h1><img src=\"https://github.com/throughput-ec/ec-workshops/blob/main/static/module1/00_ec_slide1.png?raw=true\" alt=\"EC Theme\" width=25% align=\"left\"/> Lesson 0<br>Introduction to Jupyter</h1></div>\n\n---\n\n# What is Jupyter?\n\nThe Jupyter Notebook is an open source web application that you can use to create and share documents that contain live code, equations, visualizations, and text.\n\nThe name, Jupyter, comes from the core supported programming languages that it supports: Julia, Python, and R. \n\nFor this workshop, we will be using R via [Jupyter](https://jupyter.org/index.html)\n\n---\n\nNotebooks are a great tool for exploration and for documenting your workflow.\nNotebooks allow you to write:\n- Code\n- Plots\n- Formatted text\n- Latex text for equations\n\nand much more in a single document!\n\n---\n\n- R is the programming language that runs computations.\n\n- Jupyter is an integrated development environment (IDE) that provides an interface by adding convenient features and tools.\n\n<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/38/Jupyter_logo.svg/1200px-Jupyter_logo.svg.png\" alt=\"jupyter logo\" align=\"left\" width=\"25%\" >\n\n<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/1b/R_logo.svg/1920px-R_logo.svg.png\" alt=\"R logo\" width=\"25%\" align=\"center\">\n\n---\n\nYou can think of Jupyter Notebooks as the dashboard of a car.\n\nYou don’t drive a car by interacting with the engine but rather by interacting with the car’s dashboard.\n\nIn the same way, rather than interacting with R directly, we will be using the Jupyter's interface.\n\nJupyter will allow us to:\n- Run R code interactively\n- Use other languages such as Python, Julia, or Matlab!\n\n---\n\nThis is what a Jupyter Notebook looks like:\n\n<img src=\"https://github.com/throughput-ec/ec-workshops/blob/main/static/module1/01_jupyter_notebook.png?raw=true\" alt=\"Jupyter Notebook shot\" width=75% align=\"center\">\n\n---\n\n- Notebooks are great for exploration and for documenting your workflow\n- There are many options for sharing notebooks in human readable format:\n  - Share online with [nbviewer.jupyter.org](http://nbviewer.jupyter.org/)\n  - Github renders automatically any notebooks that you push.\n  - You can convert to HTML, PDF, etc. with [nbconvert](https://nbconvert.readthedocs.io/en/latest/)\n\n---\n\n# Let's practice!\n","fields":{"slug":"/chapter1_01_introduction"}}},{"node":{"rawMarkdownBody":"\n# What is Binder?\n\nAlthough we can install software and dependencies in our local machine, we will be working with a Binder on this module. \n\n\n\nA Binder is a code repository that contains:\n\n- Code or content that you’d like people to run. This might be a Jupyter Notebook.\n\n- Configuration files for your environment. This ensures that your code is reproducible.\n\n---\n\nYou will be working simultaneously with the Binder notebook and these slides.\n\nYou can find the  <a href=\"https://mybinder.org/v2/gh/throughput-ec/ec-binder/HEAD\" target=\"_blank\">Binder</a>.\n\nClick on the previous link, the Binder will be launched. Choose to open a Jupyter Notebook and you must see the following:\n\n<img src=\"https://github.com/throughput-ec/ec-workshops/blob/main/static/module1/02_binder.png?raw=true\" alt=\"Jupyter Notebook shot\" width=55% align=\"center\">\n\n---\n\nKeep in mind that any work that you do on the Binder will not be saved.\nYou will have to download your work each time you work with the Binder.\n\n---\n\n# Explore the Jupyter Notebook in the <a href=\"https://mybinder.org/v2/gh/throughput-ec/ec-binder/HEAD\" target=\"_blank\">Binder</a>\n\n!","fields":{"slug":"/chapter1_02_using_binder"}}},{"node":{"rawMarkdownBody":"\n<div><h1><img src=\"https://github.com/throughput-ec/ec-workshops/blob/main/static/module1/00_ec_slide1.png?raw=true\" alt=\"EC Theme\" width=25% align=\"left\"/>Your First Notebook</h1></div>\n\n---\n\n### Create a New Notebook\n\n- Navigate to the `binder` repository. Here is the [link]('https://mybinder.org/v2/gh/throughput-ec/ec-binder/HEAD').\n\n- Under Notebooks, select R.\n- This will create a new untitled notebook\n  - Note the .ipynb extension (comes from \"interactive Python notebook\", the previous name before it was changed to Jupyter to reflect multi-language support)\n  - Rename the notebook to \"workshop.ipynb\"\n\n- Notebooks usually auto-save periodically, since we are in a Binder, all your new content will be lost once the Binder is closed.\n- You can download your notebooks by clicking on File -> Download\n---\n\n## Working with Notebooks\n\nA notebook consists of a series of \"cells\":\n- **Code cells**: execute snippets of code and display the output\n- **Markdown cells**: formatted text, equations, images, and more\n\nBy default, a new cell is always a code cell.\n\n---\n\n## Code Cells\n\nTo run a code cell, click in it and press `Shift-Enter` or press the Run button on the toolbar\n\nThis is an example of a Code Cell\n\n```r\n# Print something\nprint(\"Hello world\", quote = FALSE)\n```\n\n```out\nHello world\n```\n\n---\n\n## Markdown Cells\n\nIn Markdown cells, you can write plain text or add formatting and other elements with [Markdown](https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet). These include headers, **bold text**, *italic text*, hyperlinks, equations $A=\\pi r^2$, inline code `print('Hello world!')`, bulleted lists, and more.\n\n\nThis is a markdown cell:\n```\nHello~!\n```\n---\n\n\n- To create a Markdown cell, select an empty cell and change the cell type from \"Code\" to \"Markdown\" in the dropdown menu on the toolbar\n- To run a Markdown cell, press `Shift-Enter` or the Run button on the toolbar\n- To edit a Markdown cell, you need to double-click inside it\n\n---\n\n## Other Notebook Basics\n\n- Organizating cells &mdash; insert, delete, cut/copy/paste, move up/down, split, merge\n- Running all cells or selected cell(s)\n- Restarting and interrupting the kernel\n- Caveat: Notebooks are nonlinear and running cells out of order can sometimes lead to unexpected results\n  - It's good practice to periodically restart the kernel and run all cells, making sure that everything works as expected when you run the whole notebook from top to bottom\n- Closing vs. shutting down a notebook &mdash; kernel process in background\n- Re-opening a notebook after shutdown\n  - All the code output is maintained from the previous kernel session\n- Clear output of all cells or selected cell(s)\n\n---\n\n# Let's practice!\n","fields":{"slug":"/chapter1_03_creating_a_notebook"}}},{"node":{"rawMarkdownBody":"\n<div><h1><img src=\"https://github.com/throughput-ec/ec-workshops/blob/main/static/module1/00_ec_slide1.png?raw=true\" alt=\"EC Theme\" width=25% align=\"left\"/> Lesson 0<br>Learning Outcomes</h1></div>\n\n---\n\nBy the end of this module, you should:\n\n1. Understand what a Binder is.\n\n2. Write a standard configuration file; such as `environment.yml` or an `install.R`.\n\n3. Prepare a repository for Binder.\n\n4. Run a Jupyter Notebook or an Rmd in a temporary environment in the cloud ([Binder](mybinder.org))\n\n5. Share a link to a reproducible workflow.\n\n6. Know the limitations of Binder\n\n---\n\n# Let's learn about Binder!","fields":{"slug":"/chapter4_00_learning_outcomes"}}},{"node":{"rawMarkdownBody":"\n<div><h1><img src=\"https://github.com/throughput-ec/ec-workshops/blob/main/static/module1/00_ec_slide1.png?raw=true\" alt=\"EC Theme\" width=25% align=\"left\"/> Lesson 1<br>Introduction to Binder</h1></div>\n\n<head>\n<meta charset=\"UTF-8\" />\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n<title>Page Title</title>\n<style>\n    /* The . with the boxed represents that it is a class */\n    .boxed {\n    background: white;\n    color: black;\n    border: 3px solid black;\n    margin: 0px auto;\n    width: 700px;\n    padding: 10px;\n    border-radius: 10px;\n    }\n</style>\n</head>\n\n---\n\n# What is Binder?\n**Motivation: Going Beyond Paper**\n\n- Binder is a Jupyter tool for sharing interactive notebooks with others.\n\n- When publishing an article in paper, text and images might not suffice for the reader to understand all the expressed concepts.\n\n- Luckily, a lot of researchers publish their workflow on GitHub as well. \n\n- If we ran their code, we would probably understand their ideas better.\n\n- However, we might encounter difficulties while trying to read/reproduce other's people code...\n\n---\n\n# What is Binder?\n**Motivation: Reading Other People's Code**\n\n<img src=\"https://www.explainxkcd.com/wiki/images/8/89/code_quality_3.png\" alt=\"Other people code map\" width=65% align=\"center\">\n\n[Source: XKCD cartoon](http://xkcd.com/1833/)\n\n---\n\n# What is Binder?\n**Motivation: Sharing Code**\n\nSharing and reproducing other people's code may come with some challenges.\n\nBecause of this, there are different tools to share code that is reproducible:\n\n- Creating Virtual Environments\n- Creating a Docker Image\n- Writing a very precise manual on how to create the right environment to run your code\n\nEach of these methodologies come with each own set of challenges and it might be complicated or require some expertise.\nFurthermore, they will still require some efforts from your user.\n\n---\n\n# What is Binder?\n**Motivation: Sharing Code**\n\nWith Binder, we can:\n\n- Get/Provide one link with a prebuilt environment where we can run the Jupyter notebook or Rmd smoothly.\n\n- Spend the time understanding the code rather than setting up the environment to execute the code.\n\n---\n\n# What is Binder?\n**Sharing a Single Link**\n\nThat way, our emails can transition from this: \n\n<body>\n<div class=\"boxed\">\n\nHi Jane,  \nI am so happy that you like our project and that you want to run our code to understand our  figures better! \nTo run our code without installing dependencies, you will need to:  \n- Install Docker and repo2docker   \n- Download the image from the DockerHub - you can find the link in the repo.\n- Run from your terminal  \n```\nrepo2docker https://github.com/throughput-ec/ec-workshops\n```\nThat will generate a long output and at the end there will be a URL. Copy that ULR and paste it into your browser.  Send me an email if you have any issues with the installations.\nBest,  \nS\n\n</div>\n</body>\n\n---\n\n# What is Binder?\n**Sharing a Single Link**\n\nto this:\n\n<div class=\"boxed\">\n\nDear Jane,  \nI am so happy that you like our project and that you want to run our code to understand our  figures better! \nPlease click on this link to start executing our code.  \n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/throughput-ec/ec-workshops/binder)   \nBest,  \nS\n\n</div>\n\n---\n\n# Uses of Binder\n**Motivation: Your Next Project**\n\nIf your intent is to share a Notebook or an Rmd file, consider using Binder.\n\nOther popular uses for Binder include:\n\n- Sharing computational work or papers\n- Sharing educational material\n- Generating interactive open-source package documentation\n- Creating live demonstrations\n\n---\n\n# Let's review what we learned!","fields":{"slug":"/chapter4_01_introduction_to_binder"}}},{"node":{"rawMarkdownBody":"  \n<div><h1><img src=\"https://github.com/throughput-ec/ec-workshops/blob/main/static/module1/00_ec_slide1.png?raw=true\" alt=\"EC Theme\" width=25% align=\"left\"/> Lesson 3<br>Setting Up the Python Binder</h1></div>\n\n---\n\n# Step 1\n\n- Create a **public** GitHub repository.\n- You can name your GitHub repository as you like.\n- Initialize your repository with a README!\n- Clone the repository to your local machine.\n\n<img src=\"https://github.com/throughput-ec/ec-workshops/blob/main/static/module4/02_github.png?raw=true\" alt=\"Binder from Git\" width=45% align=\"center\">\n\n---\n\n# Step 2\n\n- Inside your Github repository folder:\n    - Create a Jupyter notebook.\n    - Open a new code cell and write:\n    ```\n    import folium\n\n    m = folium.Map(location=[49.267665596, -123.241999032], zoom_start=12)\n\n    tooltip = \"Click Here For More Info\"\n\n    marker = folium.Marker(\n        location=[49.267665596, -123.241999032],\n        popup=\"<stong>UBC</stong>\",\n        tooltip=tooltip)\n    marker.add_to(m)\n\n    m\n    ```\n    - Save the Jupyter notebook. \n\n---\n\n# Step 3 \n\n— Create an `environment.yml` file into your Github repository.\n\nFor our previous example, our dependencies are `folium` (and `pandas`).\n\nOur `environment.yml` file should look like this:\n\n```\nname: my-example-environment\nchannels:\n  - conda-forge\ndependencies:\n  - pandas\n  - folium\n```\n\nYou can find a template in the next \"activity\"\n\n---\n\n# Step 4 \n\n- Push all your repository changes back to GitHub.\n- Your repository should look now like this:\n\n<img src=\"https://github.com/throughput-ec/ec-workshops/blob/main/static/module4/05_github.png?raw=true\" alt=\"Binder from Git\" width=45% align=\"center\">\n\n---\n\n# Step 5\n\n- Go to my binder.\n- Type the URL of your repo into the \"GitHub repo or URL\" box. It should look like this:\n```\nhttps://github.com/your-username/my-first-python-binder\n```\n\n- Where it says Git ref type in main or the branch that you woud like to use.\n- Where it says \"URL to open (optional)\" type in the notebook file name and choose \"file\". \n\n- As you type, the webpage generates a link in the \"Copy the URL below...\" box. It should look like this:\n```\nhttps://mybinder.org/v2/gh/your-username/my-first-python-binder/HEAD\n```\n\n<img src=\"https://github.com/throughput-ec/ec-workshops/blob/main/static/module4/06_binder.png?raw=true\" alt=\"Binder from Git\" width=45% align=\"center\">\n\n\n---\n\n# Step 5b\n\n- Once this is done simply hit the launch button. \n- My Binder will create your binder repo in a few minutes.\n- Be patient. The first time it might take some while to build.\n\n<img src=\"https://github.com/throughput-ec/ec-workshops/blob/main/static/module4/07_binder.png?raw=true\" alt=\"Binder from Git\" width=45% align=\"center\">\n\n---\n\n# Step 6\n\n- Copy the generated link, open a new browser tab and visit that URL.\n\n- You will see a \"spinner\" as Binder launches the repository.\n\n<img src=\"https://github.com/throughput-ec/ec-workshops/blob/main/static/module4/08_binder.png?raw=true\" alt=\"Binder from Git\" width=45% align=\"center\">\n\n\n---\n\n# Step 7\n\n- Navigate your Jupyter notebook.\n\n<img src=\"https://github.com/throughput-ec/ec-workshops/blob/main/static/module4/09_binder.png?raw=true\" alt=\"Binder from Git\" width=45% align=\"center\">\n\n---\n\n# Step 8\n\n- Once built, you can share the link to this with anybody you want to run your project on their machine.\n\n- Save your LaunchBinder Badge and share it!\n\n<img src=\"https://github.com/throughput-ec/ec-workshops/blob/main/static/module4/10_binder.png?raw=true\" alt=\"Binder from Git\" width=45% align=\"center\">\n\n---\n\n# Let's practice!","fields":{"slug":"/chapter4_03_python_repository"}}},{"node":{"rawMarkdownBody":"\n<div><h1><img src=\"https://github.com/throughput-ec/ec-workshops/blob/main/static/module1/00_ec_slide1.png?raw=true\" alt=\"EC Theme\" width=25% align=\"left\"/> Lesson 2<br>Setting a Binder Up</h1></div>\n\n---\n# Getting to the Hub\n\nIf you visit [mybinder.org](https://mybinder.org/) you will encounter the following screen:\n\n<img src=\"https://github.com/throughput-ec/ec-workshops/blob/main/static/module4/00_binder.png?raw=true\" alt=\"Binder\" width=45% align=\"center\">\n\nBefore you can fill in the information, what do you need to create a Binder repository?\n\n---\n\n# What Do you Need to Build a Binder Repository?\n**Git Repository**\n\n- You will need to have a Git repository.\n\n- The repository must be in a *public* location online. \n\n<img src=\"https://github.com/throughput-ec/ec-workshops/blob/main/static/module4/02_github.png?raw=true\" alt=\"Binder from Git\" width=45% align=\"center\">\n\n---\n# What Do you Need to Build a Binder Repository?\n**Git Repository**\n\n- You can work with other Git repository hosting manager tool such as:\n    - `GitHub`, `GitLab`, `Bitbucket`, and MORE!\n\n<img src=\"https://github.com/throughput-ec/ec-workshops/blob/main/static/module4/01_binder.png?raw=true\" alt=\"Binder from Git\" width=45% align=\"center\">\n\n---\n\n# What Do you Need to Build a Binder Repository?\n**Configuration Files**\n\n- The repository must have configuration files that specify its environment.\n\n- Configuration files should be placed in the root of the repository or in a binder/ folder in the repository’s root.\n\n<img src=\"https://github.com/throughput-ec/ec-workshops/blob/main/static/module4/03_github.png?raw=true\" alt=\"Binder from Git\" width=45% align=\"center\">\n\n---\n\n# What Do you Need to Build a Binder Repository?\n**A File to Share**\n\n- The repository contains content designed for people to read.\n    - A Jupyter Notebook \n    - An R script to make a visualization.\n\n<img src=\"https://github.com/throughput-ec/ec-workshops/blob/main/static/module4/04_github.png?raw=true\" alt=\"Binder from Git\" width=45% align=\"center\">\n\n---\n\n# What Do you Need to Build a Binder Repository?\n**Security**\n\n- The repository **does not** require any sensitive information \n    - Passwords\n    - API secrets\n    - Personal information\n    - Private data\n\n---\n\n# What Do you Need to Build a Binder Repository?\n**A BinderHub**\n\n- Binders are powered by a BinderHub, an open-source tool that deploys the Binder service to the cloud.\n\n- There are several BinderHubs that you may use:\n    - [Binder Pangeo](https://binder.pangeo.io/)\n    - [mybinder.org](https://mybinder.org/)\n    - [Alan Turing Institute Binder](https://turing.mybinder.org/)\n    - and [others](https://mybinder.readthedocs.io/en/latest/about/federation.html)\n\n<img src=\"https://github.com/throughput-ec/ec-workshops/blob/main/static/module4/00_binder.png?raw=true\" alt=\"Binder\" width=45% align=\"center\">\n\n---\n\n# Binder's Behind the Scenes\n**repo2docker**\n\nBinder uses a tool that mimics how humans do reproducible code **repo2docker**.\n\n- It clones a github repository.\n\n- It looks for configuration files \n    - These files describe the dependencies needed for the project.\n    - It recognizes files named: `environment.yml`, `requirements.txt`, `install.R`, `Dockerfile`, and MORE.\n\n- It installs the dependencies based on the configuration file.\n\n- Starts a Jupyter Notebook / RStudio session.\n\n---\n\n# Let's practice what we learned!","fields":{"slug":"/chapter4_02_what_does_a_binder_repo_need"}}},{"node":{"rawMarkdownBody":"\n<div><h1><img src=\"https://github.com/throughput-ec/ec-workshops/blob/main/static/module1/00_ec_slide1.png?raw=true\" alt=\"EC Theme\" width=25% align=\"left\"/> Lesson 4<br>Setting Up the R Binder</h1></div>\n\n---\n\n# Step 1\n\n- Create a **public** GitHub repository.\n- You can name your GitHub repository as you like.\n- Initialize your repository with a README!\n- Clone the repository to your local machine.\n\n<img src=\"https://github.com/throughput-ec/ec-workshops/blob/main/static/module4/11_github.png?raw=true\" alt=\"Binder from Git\" width=45% align=\"center\">\n\n---\n\n# Step 2\n\n- Inside your Github repository folder:\n    - Create an Rmd file.\n    - Copy and paste the following slide. We'll learn more about Rmd files in the next module.)\n    - Save the Rmd file. \n\n---\n'''\n\n    ```{r setup, include=FALSE}  \n    knitr::opts_chunk$set(echo = TRUE)  \n    library(leaflet)  \n    leaflet(options = leafletOptions(minZoom = 0, maxZoom = 18))  \n    ```\n\n    ## My Leaflet Map\n\n    **TASK:** Find UBC in a Leaflet map.\n \n\n    ```{r}\n    map1 <- leaflet() %>%  \n                addProviderTiles(providers$Stamen.TerrainBackground) %>%  \n                addTiles() %>%  \n                addCircleMarkers(lng =-123.241999032 , lat = 49.267665596,  \n                popup = paste0(\"UBC\"))  \n    map1  \n    ```\n'''\n---\n\n# Step 3 \n\n— You will need two files in your repository:\n1. `runtime.txt` Specify the R version by date. The easiest day, write today's date (e.g. r-2021-12-07). \n\n    ```\n    r-2021-12-07\n    ```\n\n2. `install.R` A list of `install.packages('package_name')` commands, one per line.\n    For our example\n    ```\n    install.packages(c(\"leaflet\", \"tidyverse\"\n                       \"knitr\", \"rmarkdown\",\n                       \"caTools\", \"bitops\"))\n    ```\n    \nYou can find a template for both files in the next section.\n\n---\n\n# Step 4 \n\n- Push all your repository changes back to GitHub.\n- Your repository should look now like this:\n\n<img src=\"https://github.com/throughput-ec/ec-workshops/blob/main/static/module4/12_github.png?raw=true\" alt=\"Binder from Git\" width=45% align=\"center\">\n\n---\n\n# Step 5\n\n- Go to my binder.\n- Type the URL of your repo into the \"GitHub repo or URL\" box. It should look like this:\n```\nhttps://github.com/your-username/my-first-R-binder\n```\n\n- Where it says Git ref type in main or the branch that you woud like to use.\n- Where it says \"URL to open (optional)\", choose URL and type `rstudio`\n- As you type, the webpage generates a link in the \"Copy the URL below...\" box. It should look like this:\n```\nhttps://mybinder.org/v2/gh/your-username/my-first-R-binder/main?urlpath=rstudio\n```\n\n<img src=\"https://github.com/throughput-ec/ec-workshops/blob/main/static/module4/13_binder.png?raw=true\" alt=\"Binder from Git\" width=45% align=\"center\">\n\n---\n\n# Step 5b\n\n- Once this is done simply hit the launch button. \n- My Binder will create your binder repo in a few minutes.\n- Be patient. The first time it might take some while to build.\n\n<img src=\"https://github.com/throughput-ec/ec-workshops/blob/main/static/module4/14_binder.png?raw=true\" alt=\"Binder from Git\" width=45% align=\"center\">\n\n---\n\n# Step 6\n\n- Copy the generated link, open a new browser tab and visit that URL.\n\n- You will see a \"spinner\" as Binder launches the repository.\n\n<img src=\"https://github.com/throughput-ec/ec-workshops/blob/main/static/module4/08_binder.png?raw=true\" alt=\"Binder from Git\" width=45% align=\"center\">\n\n\n---\n\n# Step 7\n\n- You will have to open your `.Rmd` file manually by clicking on it.\n    - You can find it on the bottom right panel.\n\n\n<img src=\"https://github.com/throughput-ec/ec-workshops/blob/main/static/module4/15_binder.png?raw=true\" alt=\"Binder from Git\" width=45% align=\"center\">\n\n---\n\n# Step 8\n\n- Once built, you can share the link to this RStudio instance with anybody you want to run your project on their machine.\n\n- Save your LaunchBinder Badge and share it!\n\n<img src=\"https://github.com/throughput-ec/ec-workshops/blob/main/static/module4/16_binder.png?raw=true\" alt=\"Binder from Git\" width=45% align=\"center\">\n\n---\n\n# Let's practice!","fields":{"slug":"/chapter4_04_R_repository"}}},{"node":{"rawMarkdownBody":"\n<div><h1><img src=\"https://github.com/throughput-ec/ec-workshops/blob/main/static/module1/00_ec_slide1.png?raw=true\" alt=\"EC Theme\" width=25% align=\"left\"/> What We Learned</h1></div>\n\n--- \n\n# Binder is ...\n\n- Code sharing made easy\n\n- You will never have to say again \"but it ran in my computer\"\n\n- A Binder Repository contains at minimum two elements:\n    - Code or content that you want people to be able to run. \n    - Configuration files for the environment.\n    \n- Binders Hubs allow you to deploy Juypter Notebooks and Rmd the easy way\n\n---\n\nIf you want to launch some sample binders take a look at:\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/throughput-ec/ec-binder/HEAD) Jupyter Binder\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/throughput-ec/ec-binder/main?urlpath=rstudio) RStudio Binder\n\n---\n\n# Advantages of Binder\n\n- Binder lets you share links to interactive data analytics environments. This is great for workshops, tutorials, and classes.\n- Binder can provide interactivity to documentation and demonstrations of tools. \n- Binder can provide interactivity to readers, allowing them a more rich experience with your content.\n\n---\n\n# Limitations of Binder\n- Each instance is limited to 2 gb of RAM and will get destroyed after 10 minutes of inactivity. \n- Each instance can run for a maximum of 24 hours before it will get killed.\n- You can get around these limitations by hosting your own binder hub but this will require compute + devops resources from your side.\n\n---\n\n# Let's practice what we learned!","fields":{"slug":"/chapter4_05_summary_and_conclusions"}}},{"node":{"rawMarkdownBody":"\n<div><h1><img src=\"https://github.com/throughput-ec/ec-workshops/blob/main/static/module1/00_ec_slide1.png?raw=true\" alt=\"EC Theme\" width=25% align=\"left\"/> Lesson 0<br>Learning Outcomes</h1></div>\n\n---\n\nBy the end of this module, you should be able to:\n\n- Create, edit and run an Rscript \n- Write and run R Markdown reports\n- Create and run R Markdown presentations\n- Elaborate an RStudio project\n- Edit/customize RStudio project settings \n- Use RStudio as a Git client to manage your project's version control (?)\n\n---\n\n## Let's Get Started!","fields":{"slug":"/chapter5_00_learning_outcomes"}}}]}}}